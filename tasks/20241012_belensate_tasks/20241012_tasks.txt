belensate_tasks_20241012
-----------------------------
[Task]
05.30.[0.05] Design today's workflow
   05.32.[0.083] As far as I can remember, now I must design the option generation tool cosidering only the date filtering
   05.32.[0.083] Let's reflect about this
[Ongoing]
05.33.[0.1] Ongoing the the following subtask

   [Subtask]
   05.33.[0.1] Reflect about possible designs of the option generation application
      05.36.[0.15] First of all, I want this application to be scalable. With this I mean that I desire to develop a single component at once, and then, add the other. For example, I desire to develop the selected options generator module first, and only after this one works at 100%, develop the selected capacities one
      05.40.[0.217] Second, I would like to plan for an UI integration at the future to generate and modify the filterable data. The way I think about this is that I plan to generate a json file for each entity type. The executive suite for example would have it's own .json file, and from that point on, I would generate a .json for each unit of this room type. I think that this may allow for totally independent, granular and securer control of the application
         05.46.[0.317] I'm thinking in creating an UI that allows to edit each property of each room type, and also edit, remove and add type units (this is rooms).
         05.47.[0.333] Therefore, I consider smarter to generate a single file for each type and a single file for each unit.
         05.49.[0.367] In this way, I'll be able to add, remove, and edit types and units with less risk of damaging, deleting or overriding files by mistake.
         05.50.[0.383] This also will have the benefit that every file will have a single json object that controls a singe entity (a type or an unit type).
         05.51.[0.4] And all of this of course, will occur in a single folder that will organize the mentioned data files
         05.53.[0.433] Therefore, I'll leave the planning work for the future ui at this point to move to the part that I'm developing right now (the backend part that will consume the data that will be generated by this ui in the future)
         05.53.[0.433] For now, I'll generate this data manually

   [Subtask]
   05.54.[0.45] Test developing the enpoint of the selected dates workflow to try to load a .json file
      [Subtask]
      05.56.[0.483] Locate that endpoint in the code
         [Success]
         06.34.[1.117] The endpoint is at 'AppliedFiltersManager.createAppliedDatesFilterIndicatorControl.'
      07.01.[1.567] I'll create an 'OptionManager' class that will be passed to the 'AppliedFiltersManager' class to execute and control the option generation process
      07.17.[1.833] I'll create an 'OptionManager' class that will be passed to the 'AppliedFiltersManager' class to execute and control the option generation process
      07.28.[2.017] I'll create an 'OptionManager' class that will be passed to the 'AppliedFiltersManager' class to execute and control the option generation process
      07.32.[2.083] I'll create an 'OptionManager' class that will be passed to the 'AppliedFiltersManager' class to execute and control the option generation process
      07.45.[2.3] Created! Now it's time to load the .sjon
      07.47.[2.333] Created! Now it's time to load the .sjon
      07.47.[2.333] Created! Now it's time to load the .sjon
      07.48.[2.35] Created! Now it's time to load the .sjon
      07.48.[2.35] Created! Now it's time to load the .sjon
      07.48.[2.35] Created! Now it's time to load the .sjon
[Stop]
07.48.[2.35] Breakfast time

